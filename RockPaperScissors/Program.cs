using System;
using System.Collections.Generic;

// importing my C# business logic file
using RockPaperScissors.Models;

class Program
{
    static void Main()
    {
        Console.WriteLine("Welcome to the Rock Paper Scissors Game designed by Dynasty");
        Console.WriteLine();
        Console.WriteLine();


        // How the game works, the user can enter in any of the moves below
        // The computer move is generated by working with the C# in-built Random move, and we also made use of .Next() that takes in 2 arguments(the min and the max that we want)


        while (true)
        {
            Console.WriteLine("\nChoose your move:");
            Console.WriteLine("1 - Rock");
            Console.WriteLine("2 - Paper");
            Console.WriteLine("3 - Scissors");
            Console.WriteLine("0 - Quit");

            // What I need to hear now is to ensure reinstantiate my newly written C# class in business logic file to ensure I can call the GetPlayerMove() method

            RPSGenerator GetMePlayerMove = new RPSGenerator();
            


            int playerMove = GetMePlayerMove.GetPlayerMove();
            // Since the Above generates no error; I have successfully been able to separate concerns(i.e separating business logic and UI logic code into different files)
            if (playerMove == 0)
            {
                Console.WriteLine("Thanks for playing! Goodbye!");
                break;
            }

            // Making a new instance of the class I created so it can help me call my newly written 

            // Making a new instance of my class here so I can be able to make use of the 2 methods(DetermineWinner() and GetComputerMove())
            RPSGenerator GettingCompMove = new RPSGenerator(); 
            int computerMove = GettingCompMove.GetComputerMove();
            
            // since the string method GetMoveName has been moved to my business MOdels directory(business logic code) I also need to make changes here and tell C# how to get to the method
            
            Console.WriteLine($"Computer chose: {GettingCompMove.GetMoveName(computerMove)}");


            // I Have to keep reinstanting just so I am able to understand that I am talking about 2 methods
            // I can still use the GettingCompMove object I reinstantiated above here but I want to be able to separate concern; because using GettingCompMove for getting computer move and determining winner might not be understnadable for me


            RPSGenerator DeterminingTheWinner = new RPSGenerator();
            int result = DeterminingTheWinner.DetermineWinner(playerMove, computerMove);
            if (result == 0)
            {
                Console.WriteLine("It's a tie!");
            }
            else if (result == 1)
            {
                Console.WriteLine("Congratulations! You win!");
            }
            else
            {
                Console.WriteLine("Sorry, you lose!");
            }

        }
    }

    
       

}